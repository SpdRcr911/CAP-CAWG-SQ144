@page "/achievements"
@using CAPSquadron_WebServer.Services
@using CAPSquadron_WebServer.Services.CadetTracker
@using CAPSquadron_WebServer.Services.MemberAttribute

@inject ICadetTrackerService CadetTrackerService
@inject IMemberAttributeService MemberAttributeService
@inject NavigationManager Navigation

@code {

    private IEnumerable<PersonalCadetTrackerDto>? cadetTrackers;
    private IEnumerable<MemberAttributesDto> memberAttributes = [];

    protected override async Task OnInitializedAsync()
    {
        cadetTrackers = await CadetTrackerService.GetCadetTrackerAsync();
        memberAttributes = await MemberAttributeService.GetMemberAttributesAsync();
    }

    private string DisplayTask(bool? taskCompleted, DateTimeOffset? dateCompleted, DateTimeOffset? interactiveDate = null)
    {
        if (taskCompleted.HasValue && dateCompleted.HasValue)
            return dateCompleted.Value.LocalDateTime.ToShortDateString();
        else if (taskCompleted.HasValue && interactiveDate.HasValue)
            return interactiveDate.Value.LocalDateTime.ToShortDateString();

        return "-";
    }
}

<div class="container">
    @if (cadetTrackers is not null)
    {
        <CadetTrackerComponent CadetTrackers="cadetTrackers" MemberAttributes="memberAttributes"></CadetTrackerComponent>
    }
</div>
