@page "/flights/{FlightId:int}"
@using CAPSquadron_WebServer.Services
@using CAPSquadron_WebServer.Services.Flight
@using CAPSquadron_WebServer.Services.CadetTracker
@using CAPSquadron_WebServer.Services.Attendance
@using CAPSquadron_WebServer.Services.MemberAttribute
@using CAPSquadron_WebServer.Components

@inject IFlightService FlightService
@inject ICadetTrackerService CadetTrackerService
@inject IRetrieveDataService<Member> MemberService
@inject IMemberAttributeService MemberAttributeService
@inject NavigationManager Navigation

@code {
    [Parameter]
    public int FlightId { get; set; }
    private IEnumerable<MemberAttributesDto> memberAttributes = [];

    private FlightDto? flight;
    private List<PersonalCadetTrackerDto>? cadetTrackers;
    private Member? flightCommander;
    private List<Member>? flightSergeants;

    protected override async Task OnInitializedAsync()
    {
        flight = await FlightService.GetFlightByIdAsync(FlightId);

        var capids = flight.FlightSergeantIds.Concat(flight.MemberIds).ToList();
        capids.Add(flight.FlightCommanderId!.Value);
        cadetTrackers = (await CadetTrackerService.GetCadetTrackerByCapidsAsync(capids)).ToList();
        flightCommander = await MemberService.GetAsync(flight.FlightCommanderId.Value);
        flightSergeants = (await MemberService.GetAsync(flight.FlightSergeantIds)).ToList();
        memberAttributes = await MemberAttributeService.GetMemberAttributesAsync();
    }

    private string DisplayTask(bool? taskCompleted, DateTimeOffset? dateCompleted)
    {
        if (taskCompleted.HasValue && dateCompleted.HasValue)
            return dateCompleted.Value.LocalDateTime.ToShortDateString();

        return "-";
    }
}
@if (flight is not null)
{
    <div class="container">
        <div class="row">
            <div class="col mt-3"><h3>@flight.Name</h3></div>
        </div>
        <div class="row">
            <div class="col">
                <div class="card shadow mb-3">
                    <div class="card-header">Flight Commander</div>
                    <div class="card-body">@flightCommander?.Rank @flightCommander?.FullName</div>
                </div>
            </div>
            <div class="col">
                <div class="card shadow">
                    <div class="card-header">Flight Sergeant</div>
                    <div class="card-body">
                        @if (flightSergeants is not null)
                            foreach (var sergeant in flightSergeants)
                                @($"{sergeant.Rank} {sergeant.FullName}")

                    </div>
                </div>
            </div>
        </div>

        @if (cadetTrackers is not null)
        {
            <CadetTrackerComponent CadetTrackers="cadetTrackers" MemberAttributes="memberAttributes"></CadetTrackerComponent>
        }
    </div>
}
