@page "/flights"
@using CAPSquadron_WebServer.Services
@using CAPSquadron_WebServer.Services.Flight
@using CAPSquadron_WebServer.Services.Attendance
@using CAPSquadron_WebServer.Services.MemberAttribute

@inject IFlightService FlightService
@inject IRetrieveDataService<Member> MemberService
@inject IMemberAttributeService MemberAttributeService
@inject NavigationManager Navigation

@if (flights == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container-fluid">
        <div class="row">
            <div class="col mt-3"><h3>Flights</h3></div>
        </div>
        <div class="row">
            @foreach (var flight in flights.OrderBy(flt => !flt.Name.EndsWith("Flight")).ThenBy(flt => flt.Name))
            {
                var flightMembership = flightMemberships.FirstOrDefault(fm => fm.FlightId == flight.Id);
                <div class="col-sm-12 col-lg-6 col-xl-4 col-xxl-3">
                    <div class="card shadow mb-4">
                        <h5 class="card-header">
                            <a @onclick="() => NavigateToFlight(flight.Id)" href="javascript:void(0);" class="link-offset-2 link-offset-0-hover link-underline link-underline-opacity-0">@flight.Name</a> <button class="p-0 border border-0 bg-transparent" @onclick="() => NavigateToUpdateFlight(flight.Id)" href="javascript:void(0);">⚙️</button>
                        </h5>
                        <div class="card-body">
                            <strong class="card-title">Flight Commander:</strong>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item"><a @onclick="() => NavigateToCadet(flightMembership!.FlightCommander!.Capid)" href="javascript:void(0);">@flightMembership?.FlightCommander?.Rank @flightMembership?.FlightCommander?.FullName</a></li>
                            </ul>
                            <strong>Flight Sergeants:</strong>
                            <ul class="list-group list-group-flush">
                                @foreach (var sergeant in flightMembership?.FlightSergeants ?? Enumerable.Empty<Member>())
                                {
                                    <li class="list-group-item"><a @onclick="() => NavigateToCadet(sergeant.Capid)" href="javascript:void(0);">@sergeant.Rank @sergeant.FullName</a></li>
                                }
                            </ul>
                            <strong>Members:</strong>
                            <ul class="list-group list-group-flush list-group-numbered">
                                @foreach (var member in flightMembership?.Members.Where(m => !flight.FlightSergeantIds.Contains(m.Capid) && flight.FlightCommanderId != m.Capid).OrderBy(f => f.FullName).ToList() ?? [])
                                {
                                    <li class="list-group-item">
                                        <a @onclick="() => NavigateToCadet(member.Capid)" href="javascript:void(0);">
                                            @member.Rank @member.FullName
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
