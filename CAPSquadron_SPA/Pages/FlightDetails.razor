@page "/flight-details/{id:int}"
@using CAPSquadron_SPA.Services
@inject IFlightService FlightService
@inject ICadetTrackerService CadetTrackerService
@inject IMemberService MemberService
@inject NavigationManager Navigation

<PageTitle>Flight Details</PageTitle>

<h3>Flight Details</h3>

@if (flight != null)
{
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">@flight.Name</h5>
            <p class="card-text"><strong>Commander:</strong> @fltCommander?.Name @fltCommander?.Rank</p>
            <p class="card-text"><strong>Sergeants:</strong></p>
            <ul>
                @foreach (var sergeant in fltSegerants)
                {
                    <li>@sergeant.Name (@sergeant.Rank)</li>
                }
            </ul>
        </div>
    </div>

    <h3>Cadet Tracker Information</h3>
    <div>
        @if (cadetTrackers != null)
        {
            @foreach (var group in cadetTrackers.GroupBy(ct => ct.AchievementName))
            {
                <div class="achievement-group">
                    <h5>@group.Key</h5>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>CAPID</th>
                                <th>Last Name</th>
                                <th>First Name</th>
                                <th>Next Approval Date</th>
                                <th>Progress</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var cadet in group)
                            {
                                <tr>
                                    <td>@cadet.Capid</td>
                                    <td>@cadet.LastName</td>
                                    <td>@cadet.FirstName</td>
                                    <td>@cadet.NextApprovalDate?.ToString("d")</td>
                                    <td>
                                        <svg viewBox="0 0 100 100" class="hexagon">
                                            <path d="M50,50 L50,0 A50,50 0 0,1 93.3,25 z"
                                                  class="hexagon-segment @(cadet.LeardToLead ?? true ? "completed" : "")"></path>
                                            <path d="M50,50 L93.3,25 A50,50 0 0,1 93.3,75 z"
                                                  class="hexagon-segment @(cadet.DrillAndCeremonies ?? true ? "completed" : "")"></path>
                                            <path d="M50,50 L93.3,75 A50,50 0 0,1 50,100 z"
                                                  class="hexagon-segment @(cadet.Aerospace ?? true ? "completed" : "")"></path>
                                            <path d="M50,50 L50,100 A50,50 0 0,1 6.7,75 z"
                                                  class="hexagon-segment @(cadet.Fitness ?? true ? "completed" : "")"></path>
                                            <path d="M50,50 L6.7,75 A50,50 0 0,1 6.7,25 z"
                                                  class="hexagon-segment @(cadet.Character ?? true ? "completed" : "")"></path>
                                            <path d="M50,50 L6.7,25 A50,50 0 0,1 50,0 z"
                                                  class="hexagon-segment @(cadet.SpecialRequirement ?? true ? "completed" : "")"></path>
                                        </svg>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        }
        else
        {
            <p>Loading cadet tracker information...</p>
        }
    </div>
}
else
{
    <p>Loading flight details...</p>
}

@code {
    [Parameter] public int Id { get; set; }
    private FlightDto? flight;
    private IEnumerable<PersonalCadetTrackerDto> cadetTrackers = [];
    private Member? fltCommander;
    private IEnumerable<Member> fltSegerants = [];

    protected override async Task OnInitializedAsync()
    {
        flight = await FlightService.GetFlightByIdAsync(Id);
        var memberCapIds = flight.FlightSergeantIds.Concat(flight.MemberIds).ToList();
        memberCapIds.Add(flight.FlightCommanderId!.Value);
        cadetTrackers = (await CadetTrackerService.GetCadetTrackerByCapidsAsync(memberCapIds)).ToList();

        fltCommander = await MemberService.GetMemberAsync(flight.FlightCommanderId!.Value);
        fltSegerants = await MemberService.GetMembersAsync(flight.FlightSergeantIds);
    }

    private void NavigateToFlight(int flightId)
    {
        Navigation.NavigateTo($"/flight-details/{flightId}");
    }
}