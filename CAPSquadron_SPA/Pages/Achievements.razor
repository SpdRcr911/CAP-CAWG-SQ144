@page "/achievements"
@using CAPSquadron_SPA.Services
@inject ICadetTrackerService CadetTrackerService
@inject NavigationManager Navigation

@code {

    private IEnumerable<PersonalCadetTrackerDto>? cadetTrackers;

    protected override async Task OnInitializedAsync()
    {
        cadetTrackers = await CadetTrackerService.GetCadetTrackerAsync();
    }

    private string DisplayTask(bool? taskCompleted, DateTimeOffset? dateCompleted)
    {
        if (taskCompleted.HasValue && dateCompleted.HasValue)
            return dateCompleted.Value.LocalDateTime.ToShortDateString();

        return "-";
    }
}

@if (cadetTrackers is not null)
{
    <div class="achievements">
        @foreach (var group in cadetTrackers.GroupBy(ct => ct.AchievementName))
        {
            <div class="achievement-group">
                <h5>@group.Key</h5>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>CAPID</th>
                            <th>Last Name</th>
                            <th>First Name</th>
                            <th>Next Approval Date</th>
                            <th>Tasks</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cadet in group)
                        {
                            <tr>
                                <td>
                                    <a class="nav-link" href="https://www.capnhq.gov/CAP.ProfessionalLevels.Web/Accomplishments/CadetPromotions?capid=@cadet.Capid" target="_blank">@cadet.Capid</a>
                                </td>
                                <td>@cadet.LastName</td>
                                <td>@cadet.FirstName</td>
                                <td>@cadet.NextApprovalDate!.Value.LocalDateTime.ToShortDateString()</td>
                                <td>
                                    <div>Learn To Lead: @DisplayTask(cadet.LeardToLead, cadet.LeadLabDate)</div>
                                    <div>Drill And Ceremonies: @DisplayTask(cadet.DrillAndCeremonies, cadet.DrillDate)</div>
                                    <div>Aerospace: @DisplayTask(cadet.Aerospace, cadet.AeDate)</div>
                                    <div>Fitness: @DisplayTask(cadet.Fitness, cadet.PhyFitTest)</div>
                                    <div>Character Development: @cadet.Character</div>
                                    <div>Time in Grade: @(cadet.NextApprovalDate.HasValue && cadet.NextApprovalDate.Value <= DateTime.Now ? cadet.NextApprovalDate.Value.LocalDateTime.ToShortDateString() : "-")</div>
                                </td>
                                <td>
                                    <svg viewBox="0 0 100 100" class="hexagon">
                                        <path d="M50,50 L50,0 A50,50 0 0,1 93.3,25 z"
                                              class="hexagon-segment @(cadet.LeardToLead ?? true ? "completed" : "")">
                                            <title>Leadership</title>
                                        </path>
                                        <path d="M50,50 L93.3,25 A50,50 0 0,1 93.3,75 z"
                                              class="hexagon-segment @(cadet.Aerospace ?? true ? "completed" : "")">
                                            <title>Aerospace</title>
                                        </path>
                                        <path d="M50,50 L93.3,75 A50,50 0 0,1 50,100 z"
                                              class="hexagon-segment @(cadet.DrillAndCeremonies ?? true ? "completed" : "")">
                                            <title>Drill</title>
                                        </path>
                                        <path d="M50,50 L50,100 A50,50 0 0,1 6.7,75 z"
                                              class="hexagon-segment @(cadet.Fitness ?? true ? "completed" : "")">
                                            <title>Fitness</title>
                                        </path>
                                        <path d="M50,50 L6.7,75 A50,50 0 0,1 6.7,25 z"
                                              class="hexagon-segment @(cadet.Character ?? true ? "completed" : "")">
                                            <title>Character</title>
                                        </path>
                                        <path d="M50,50 L6.7,25 A50,50 0 0,1 50,0 z"
                                              class="hexagon-segment @(cadet.NextApprovalDate.HasValue && cadet.NextApprovalDate.Value <= DateTime.Now ? "completed" : "")">
                                            <title>Time in Grade</title>
                                        </path>
                                    </svg>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
}
<style>
    .achievements .achievement-group {
        margin-bottom: 20px;
    }
</style>
